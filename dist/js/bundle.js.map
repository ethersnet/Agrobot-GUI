{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/events/events.ts","src/ts/events/ros.ts","src/ts/events/tab.ts","src/ts/events/widget.ts","src/ts/events/widget_instance.ts","src/ts/events/workspace.ts","src/ts/main.ts","src/ts/model/rosweb.ts","src/ts/model/serialized_workspace.ts","src/ts/model/tab.ts","src/ts/model/widget.ts","src/ts/model/widget_group.ts","src/ts/model/widget_instance.ts","src/ts/model/workspace.ts","src/ts/super/design.ts","src/ts/super/frontend.ts","src/ts/super/lightbox.ts","src/ts/super/names.ts","src/ts/super/storage.ts","src/ts/super/trigger.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/// <reference path=\"../typings/tsd.d.ts\" />\n\n// import {db} from \"../super/db.ts\";\nimport {lightbox} from \"../super/lightbox\";\n\nexport class EventsParent {\n\n  constructor() {\n    this.DelegateEvent(\"#lightboxBackground\", \"click\", this.HideLightbox);\n    this.DelegateEvent(\"#lightbox\", \"click\", this.Lightbox);\n  }\n\n  public nothing = (e?: MouseEvent) => {\n    e.preventDefault();\n  }\n\n  public DelegateEvent(selector: string | Document | Window, event: string, method: () => void) {\n    if (event == \"resize\") {\n      $(selector).resize(method);\n    }\n    $(document).delegate(selector, event, method);\n  }\n\n  public DelegateElementCreated(selector: string, method: () => void) {\n    $('body').on('DOMNodeInserted', selector, method);\n  }\n\n  public HideLightbox = (e?: MouseEvent) => {\n    lightbox.CloseLightbox();\n    e.preventDefault();\n  }\n\n  public Lightbox = (e?: MouseEvent) => {\n    e.stopPropagation();\n  }\n\n}\n","/// <reference path=\"../typings/tsd.d.ts\" />\n\n// Parent Class\nimport { EventsParent } from \"./events\";\nimport { frontend } from \"../super/frontend\"\n\nexport class RosEvents extends EventsParent {\n\n  public Ros: ROSLIB.Ros;\n  public connected: boolean = false;\n\n  constructor(ros: ROSLIB.Ros) {\n    super();\n\n    this.Ros = ros;\n    this.Ros.on(\"connection\", this.OnRosConnection);\n    this.Ros.on(\"close\", this.OnRosClose);\n    this.Ros.on(\"error\", this.OnRosError);\n    this.DelegateEvent(\".jsRosConnect\", \"click\", this.Connect);\n    this.DelegateEvent(\".jsConfiguration\", \"click\", this.Configuration);\n  }\n\n  public Connect = (e?: MouseEvent) => {\n    if ($(\".jsRosConnect\").hasClass(\"loading\")) {\n      return;\n    }\n    $(\".jsRosConnect\").addClass(\"loading\");\n\n    if (!this.connected) {\n      let url: string = $(\"#jsRosUrl\").val();\n      this.Ros.connect(url);\n    } else {\n      this.Ros.close();\n    }\n    if (e != undefined) e.preventDefault();\n  }\n  public Configuration = (e?: MouseEvent) => {\n    frontend.ShowConfiguration();\n    e.preventDefault();\n  }\n  private OnRosConnection = () => {\n    this.connected = true;\n    $(\".jsRosConnect\").addClass(\"active\");\n    $(\".jsRosConnect\").removeClass(\"loading\");\n\n    $(\".jsRosConnect, #jsRosUrl, .jsConfiguration\").removeClass(\"alert\");\n  }\n  private OnRosClose = () => {\n    this.connected = false;\n    $(\".jsRosConnect\").removeClass(\"active\");\n    $(\".jsRosConnect\").removeClass(\"loading\");\n  }\n  private OnRosError = (error: any) => {\n    this.Ros.close();\n    this.connected = false;\n    $(\".jsRosConnect\").removeClass(\"active\");\n    $(\".jsRosConnect\").removeClass(\"loading\");\n\n    $(\".jsRosConnect, #jsRosUrl, .jsConfiguration\").addClass(\"alert\");\n    console.log(error);\n  }\n\n}","/// <reference path=\"../typings/tsd.d.ts\" />\n\n// Parent Class\nimport { EventsParent } from \"./events\";\n\n// Models\nimport { WidgetInstance } from \"../model/widget_instance\";\nimport { Tab } from \"../model/tab\";\nimport { currentWorkspace } from \"../model/workspace\";\n\n// Super classes\n// import {db} from \"../super/db\"\nimport { Design } from \"../super/design\"\nimport { Frontend } from \"../super/frontend\"\n\nexport class TabEvents extends EventsParent {\n\n  private Frontend: Frontend;\n  private Design: Design;\n\n  constructor() {\n    super();\n\n    this.Frontend = new Frontend();\n    this.Design = new Design();\n\n    // Resize Events\n    this.DelegateEvent(window, \"resize\", this._windowResized);\n\n    // Left Click Events\n    this.DelegateEvent(\".jsEventNothing\", \"click\", this.nothing);\n    this.DelegateEvent(\".jsEventNewTab\", \"click\", this.newTab);\n    this.DelegateEvent(\".jsEventTab\", \"click\", this.selectTab);\n    this.DelegateEvent(\".jsEventCloseTab\", \"click\", this.closeTab);\n\n    this.DelegateEvent(\".jsRosweb\", \"click\", (e?: MouseEvent) => {\n      console.log(currentWorkspace);\n      e.preventDefault();\n    });\n  }\n\n  private _windowResized = (e?: MouseEvent) => {\n    this.Design.adjustWindowResize();\n  }\n\n  public newTab = (e?: MouseEvent) => {\n    this._newTab();\n    e.preventDefault();\n  }\n  private _newTab() {\n    var tab: Tab = new Tab();\n    this._selectTab(tab);\n  }\n\n  public selectTab = (e?: MouseEvent) => {\n    let tabId: number = parseInt($(e.toElement).attr(\"data-tab-id\"));\n    let tab: Tab = currentWorkspace.get<Tab>(tabId, \"Tab\");\n    this._selectTab(tab);\n    e.preventDefault();\n  }\n  private _selectTab(selectedTab: Tab): void {\n    let list: Tab[] = currentWorkspace.getList<Tab>(\"Tab\");\n    list.forEach((tab: Tab, index: number) => {\n      if (selectedTab.id != tab.id) tab.active = false;\n    });\n    selectedTab.setActive();\n\n    let widgetInstances = currentWorkspace.getList<WidgetInstance>(\"WidgetInstance\");\n    widgetInstances.forEach((widgetInstance: WidgetInstance, index: number) => {\n      widgetInstance.WidgetCallbackClass[\"clbkTab\"](selectedTab.id == widgetInstance.tab_id);\n    });\n  }\n\n  public closeTab = (e?: MouseEvent) => {\n    let tabId: number = parseInt($(e.toElement).attr(\"data-tab-id\"));\n    if (confirm(\"Are you sure you want to close tab #\" + tabId + \" ?\")) {\n      this._closeTab(tabId);\n    }\n    e.preventDefault();\n  }\n  private _closeTab(tabId: number): void {\n    currentWorkspace.remove<Tab>(tabId, \"Tab\");\n    this.Frontend.closeTab(tabId);\n  }\n\n}\n","/// <reference path=\"../typings/tsd.d.ts\" />\n\n// Super\nimport {Frontend} from \"../super/frontend\"\n// import {db} from \"../super/db.ts\"\n\n// Model\nimport {Tab} from \"../model/tab\"\nimport {Widget} from \"../model/widget\"\nimport {WidgetInstance} from \"../model/widget_instance\"\nimport {currentWorkspace} from \"../model/workspace\"\n\n// Parent Class\nimport {EventsParent} from \"./events\";\n\nexport class WidgetEvents extends EventsParent {\n\n  public Frontend: Frontend = new Frontend();\n  public Ros: ROSLIB.Ros;\n\n  constructor(ros: ROSLIB.Ros) {\n    super();\n\n    this.Ros = ros;\n\n    this.DelegateEvent(\".jsEventWidgetsMenu\", \"click\", this.widgetMenu);\n    this.DelegateEvent(\".jsEventWidgetItem\", \"click\", this.widgetItem);\n\n    this.DelegateEvent(\".jsWidgetContainer a\", \"click\", this.nothing);\n  }\n\n  public widgetMenu = (e?: MouseEvent) => {\n    this._widgetMenu();\n    e.preventDefault();\n  }\n  private _widgetMenu() {\n    this.Frontend.showWidgetsMenu();\n  }\n\n  public widgetItem = (e?: MouseEvent) => {\n    let widgetId: number = parseInt($(e.toElement).attr(\"data-widget-id\"));\n    let widget: Widget = currentWorkspace.get<Widget>(widgetId, \"Widget\");\n    let tab: Tab = currentWorkspace.getCurrentTab();\n    this._widgetItem(widget, tab);\n    this._widgetMenu();\n    e.preventDefault();\n  }\n  private _widgetItem(widget: Widget, tab: Tab): void {\n    new WidgetInstance(widget, tab);\n  }\n\n}","/// <reference path=\"../typings/tsd.d.ts\" />\n\n// Types\nimport { Geometry } from \"../types/Geometry\";\nimport { WidgetInstance } from \"../model/widget_instance\";\n\n// Super\nimport { Frontend } from \"../super/frontend\";\nimport { currentWorkspace } from \"../model/workspace\"\n// import {db} from \"../super/db.ts\";\n\n// Parent Class\nimport { EventsParent } from \"./events\";\n\ndeclare var MyApp: any;\n\nexport class WidgetInstanceEvents extends EventsParent {\n\n  public Frontend: Frontend;\n  public Ros: ROSLIB.Ros;\n\n  constructor(ros: ROSLIB.Ros) {\n    super();\n\n    this.Ros = ros;\n\n    this.Frontend = new Frontend();\n\n    // Settings\n    this.DelegateEvent(\".jsWidgetConfirm\", \"click\", this.WidgetConfirm);\n    this.DelegateEvent(\".jsWidgetDelete\", \"click\", this.WidgetDelete);\n    this.DelegateEvent(\".jsWidgetSettings\", \"click\", this.WidgetSettings);\n    this.DelegateEvent(\".jsWidgetContainer\", \"dblclick\", this.WidgetContainerDblClick);\n    this.DelegateEvent(\".jsWidgetSettingsConfirm\", \"click\", this.WidgetSettingsConfirm);\n    this.DelegateEvent(\".jsWidgetSettingsCancel\", \"click\", this.WidgetSettingsCancel);\n    this.DelegateEvent(\".jsWidgetSettingsRefresh\", \"click\", this.WidgetSettingsRefresh);\n    this.DelegateEvent(\".jsWidgetSettingsRemove\", \"click\", this.WidgetSettingsRemove);\n\n    // Move and Resize\n    this.DelegateEvent(\".jsToggleMovable\", \"click\", this.ToggleMovable);\n\n    this.DelegateEvent(\".jsWidgetContainer[data-widget-conf='1']\", \"mousedown\", this.MouseDown);\n    this.DelegateEvent(document, \"mousemove\", this.MouseMove);\n    this.DelegateEvent(document, \"mouseup\", this.MouseUp);\n  };\n\n  public WidgetConfirm = (e?: MouseEvent) => {\n    $(e.toElement).closest(\".jsWidgetContainer\").attr(\"data-widget-conf\", \"0\");\n    e.preventDefault();\n  };\n\n  public WidgetDelete = (e?: MouseEvent) => {\n    $(e.toElement).closest(\".jsWidgetContainer\").remove();\n    e.preventDefault();\n  };\n\n  public WidgetSettings = (e?: MouseEvent) => {\n    let widgetInstanceId: number = parseInt($(e.toElement).attr(\"data-widget-instance-id\"));\n    this._WidgetSettings(widgetInstanceId);\n    e.preventDefault();\n  };\n  private _WidgetSettings(widgetInstanceId: number): void {\n    $(\"#widgetSettings\").val(widgetInstanceId);\n    $(\".jsSettingsSelection\").html(\"\");\n\n    $(\".jsWidgetContainer\").removeClass(\"jsSettingsActive\");\n    $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"]\").addClass(\"jsSettingsActive\");\n\n    // generate fields\n    this._WidgetSettingsSubscriptions(widgetInstanceId);\n    this._WidgetSettingsRosParams(widgetInstanceId);\n    this._WidgetSettingsRosServices(widgetInstanceId);\n    this._WidgetSettingsParams(widgetInstanceId);\n    this._WidgetSettingsActionServers(widgetInstanceId);\n\n    // frontend actions\n    this.Frontend.ShowWidgetSettings();\n    this._WidgetSettingsRefresh();\n  }\n  private _WidgetSettingsSubscriptions(widgetInstanceId: number): void {\n    $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"] meta[data-ros-topic=1]\").each(function (k, v) {\n      var html = MyApp.templates.rosTopicSelector({\n        widget_instance_id: widgetInstanceId,\n        ros_topic_id: $(v).attr(\"data-ros-topic-id\"),\n        ros_topic_chng: $(v).attr(\"data-ros-topic-chng\"),\n        ros_topic_desc: $(v).attr(\"data-ros-topic-desc\"),\n        ros_topic_type: $(v).attr(\"data-ros-topic-type\")\n      });\n      $(\".jsSettingsSelection\").append(html);\n    });\n  };\n  private _WidgetSettingsRosParams(widgetInstanceId: number): void {\n    $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"] meta[data-ros-param=1]\").each(function (k, v) {\n      var html = MyApp.templates.rosParamSelector({\n        widget_instance_id: widgetInstanceId,\n        ros_param_id: $(v).attr(\"data-ros-param-id\"),\n        ros_param_desc: $(v).attr(\"data-ros-param-desc\"),\n        ros_param_chng: $(v).attr(\"data-ros-param-chng\")\n      });\n      $(\".jsSettingsSelection\").append(html);\n    });\n  };\n  private _WidgetSettingsRosServices(widgetInstanceId: number): void {\n    $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"] meta[data-ros-service=1]\").each(function (k, v) {\n      var html = MyApp.templates.rosServiceSelector({\n        widget_instance_id: widgetInstanceId,\n        ros_service_id: $(v).attr(\"data-ros-service-id\"),\n        ros_service_desc: $(v).attr(\"data-ros-service-desc\"),\n        ros_service_chng: $(v).attr(\"data-ros-service-chng\")\n      });\n      $(\".jsSettingsSelection\").append(html);\n    });\n  };\n  private _WidgetSettingsParams(widgetInstanceId: number): void {\n    $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"] meta[data-wdgt-param=1]\").each(function (k, v) {\n      var html = MyApp.templates.wdgtParamField({\n        widget_instance_id: widgetInstanceId,\n        widget_param_id: $(v).attr(\"data-widget-param-id\"),\n        widget_param_desc: $(v).attr(\"data-widget-param-desc\"),\n        widget_param_var: $(v).attr(\"data-widget-param-var\"),\n        default_value: $(v).attr(\"data-widget-param-value\")\n      });\n      $(\".jsSettingsSelection\").append(html);\n    });\n  };\n  private _WidgetSettingsActionServers(widgetInstanceId: number): void {\n    $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"] meta[data-ros-actionserver=1]\").each(function (k, v) {\n      var html = MyApp.templates.rosActionServerSelector({\n        widget_instance_id: widgetInstanceId,\n        ros_actionserver_id: $(v).attr(\"data-ros-actionserver-id\"),\n        ros_actionserver_chng: $(v).attr(\"data-ros-actionserver-chng\"),\n        ros_actionserver_desc: $(v).attr(\"data-ros-actionserver-desc\"),\n        ros_actionserver_type: $(v).attr(\"data-ros-actionserver-type\")\n      });\n      $(\".jsSettingsSelection\").append(html);\n    });\n  }\n\n  public WidgetContainerDblClick = (e?: MouseEvent) => {\n    let widgetInstanceId = parseInt($(e.toElement).closest(\".jsWidgetContainer\").attr(\"data-widget-instance-id\"));\n    this.ToggleMovable();\n    if ($(\".jsToggleMovable\").hasClass(\"active\")) {\n      this._WidgetSettings(widgetInstanceId);\n    }\n    document.getSelection().removeAllRanges();\n    e.preventDefault();\n  }\n\n  public WidgetSettingsRefresh = (e?: MouseEvent) => {\n    this.Frontend.LoadingLink($(\".jsWidgetSettingsRefresh\")[0]);\n    $(\".jsRosTopicSelector\").attr(\"disabled\", \"disabled\");\n    this._WidgetSettingsRefresh();\n    e.preventDefault();\n  };\n  private _WidgetSettingsRefresh() {\n    this._WidgetSettingsRefreshTopics();\n  };\n  private _WidgetSettingsRefreshTopics() {\n    this.Ros.getTopics((topicsResponse: any) => {\n      this.Frontend.UpdateRosTopicSelectors(topicsResponse);\n      this._WidgetSettingsRefreshParams();\n    }, (topicsError: any) => {\n      alert(\"Error: ROSWeb may not be connected to a RosBridge WebSocket server\");\n      console.log(topicsError);\n    });\n  };\n  private _WidgetSettingsRefreshParams() {\n    this.Ros.getParams((paramsResponse: any) => {\n      this.Frontend.UpdateRosParamSelectors(paramsResponse);\n      this._WidgetSettingsRefreshsServices();\n    }, (paramsError: any) => {\n      alert(\"Error: ROSWeb may not be connected to a RosBridge WebSocket server\");\n      console.log(paramsError);\n    });\n  };\n  private _WidgetSettingsRefreshsServices() {\n    this.Ros.getServices((servicesResponse: any) => {\n      this.Frontend.UpdateRosServiceSelectors(servicesResponse);\n      this._WidgetSettingsRefreshActionServers();\n      $(\".jsRosTopicSelector\").removeAttr(\"disabled\");\n    }, (servicesError: any) => {\n      alert(\"Error: ROSWeb may not be connected to a RosBridge WebSocket server\");\n      console.log(servicesError);\n    });\n  };\n  private _WidgetSettingsRefreshActionServers() {\n    this.Ros.getActionServers((actionServersResponse: any) => {\n      this.Frontend.UpdateActionServerSelectors(actionServersResponse);\n      this.Frontend.LoadingLink($(\".jsWidgetSettingsRefresh\")[0], false);\n    }, (topicsError: any) => {\n      alert(\"Error: ROSWeb may not be connected to a RosBridge WebSocket server\");\n      console.log(topicsError);\n    });\n  };\n\n  public WidgetSettingsConfirm = (e?: MouseEvent) => {\n    // widget instance id\n    let widgetInstanceId: number = parseInt($(\"input#widgetSettings\").val());\n\n    // manage params\n    this._WidgetSettingsConfirmParams(widgetInstanceId);\n    \n    // manage ros data\n    this._WidgetSettingsConfirmSubscriptions(widgetInstanceId);\n    this._WidgetSettingsConfirmRosParams(widgetInstanceId);\n    this._WidgetSettingsConfirmRosServices(widgetInstanceId);\n    this._WidgetSettingsConfirmActionServers(widgetInstanceId);\n\n    // confirm callback\n    let widgetInstance: WidgetInstance = currentWorkspace.get<WidgetInstance>(widgetInstanceId, \"WidgetInstance\");\n    //widgetInstance.WidgetCallbackClass[\"clbkConfirm\"]();\n    widgetInstance.WidgetCallbackClass.clbkConfirm();\n\n    // frontend action\n    this.Frontend.HideWidgetSettings();\n    e.preventDefault();\n  };\n  private _WidgetSettingsConfirmSubscriptions(widgetInstanceId: number): void {\n    $(\".jsRosTopicSelector\").each((index: number, elem: Element) => {\n      let topic_name: string = $(elem).val();\n      let widgetInstance: WidgetInstance = currentWorkspace.get<WidgetInstance>(widgetInstanceId, \"WidgetInstance\");\n\n      let topicChangeCallback: string = $(elem).attr(\"data-ros-topic-chng\");\n      widgetInstance.WidgetCallbackClass[topicChangeCallback](topic_name);\n\n      let rosTopicId = $(elem).attr(\"data-ros-topic-id\");\n      let htmlWidgetInstance = $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"]\");\n      let htmlMeta = $(htmlWidgetInstance).find(\"meta[data-ros-topic-id=\" + rosTopicId + \"]\");\n      $(htmlMeta).attr(\"data-ros-topic-slctd\", topic_name);\n    });\n  };\n  private _WidgetSettingsConfirmRosParams(widgetInstanceId: number): void {\n    $(\".jsRosParamSelector\").each((index: number, elem: Element) => {\n      let widgetInstance: WidgetInstance = currentWorkspace.get<WidgetInstance>(widgetInstanceId, \"WidgetInstance\");\n\n      let paramChangeCallback: any = $(elem).attr(\"data-ros-param-chng\");\n      let paramSelected: string = $(elem).val();\n      widgetInstance.WidgetCallbackClass[paramChangeCallback](paramSelected);\n\n      let rosParamId = $(elem).attr(\"data-ros-param-id\");\n      let htmlWidgetInstance = $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"]\");\n      let htmlMeta = $(htmlWidgetInstance).find(\"meta[data-ros-param-id=\" + rosParamId + \"]\");\n      $(htmlMeta).attr(\"data-ros-param-slctd\", paramSelected);\n    });\n  };\n  private _WidgetSettingsConfirmRosServices(widgetInstanceId: number): void {\n    $(\".jsRosServiceSelector\").each((index: number, elem: Element) => {\n      let widgetInstance: WidgetInstance = currentWorkspace.get<WidgetInstance>(widgetInstanceId, \"WidgetInstance\");\n\n      let serviceChangeCallback: any = $(elem).attr(\"data-ros-service-chng\");\n      let serviceSelected: string = $(elem).val();\n      widgetInstance.WidgetCallbackClass[serviceChangeCallback](serviceSelected);\n\n      let rosServiceId = $(elem).attr(\"data-ros-service-id\");\n      let htmlWidgetInstance = $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"]\");\n      let htmlMeta = $(htmlWidgetInstance).find(\"meta[data-ros-service-id=\" + rosServiceId + \"]\");\n      $(htmlMeta).attr(\"data-ros-service-slctd\", serviceSelected);\n    });\n  }\n  private _WidgetSettingsConfirmParams(widgetInstanceId: number): void {\n    $(\".jsWidgetParam\").each((index: number, elem: Element) => {\n      let widgetInstance: WidgetInstance = currentWorkspace.get<WidgetInstance>(widgetInstanceId, \"WidgetInstance\");\n\n      let varName = $(elem).attr(\"data-widget-param-var\");\n      let varValue = $(elem).val();\n      widgetInstance.WidgetCallbackClass[varName] = varValue;\n\n      let widgetParamId = $(elem).attr(\"data-widget-param-id\");\n      let htmlWidgetInstance = $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"]\");\n      let htmlMeta = $(htmlWidgetInstance).find(\"meta[data-widget-param-id=\" + widgetParamId + \"]\");\n      $(htmlMeta).attr(\"data-widget-param-value\", varValue);\n    });\n  };\n  private _WidgetSettingsConfirmActionServers(widgetInstanceId: number): void {\n    $(\".jsRosActionServerSelector\").each((index: number, elem: Element) => {\n      let widgetInstance: WidgetInstance = currentWorkspace.get<WidgetInstance>(widgetInstanceId, \"WidgetInstance\");\n\n      let actionServerChangeCallback: any = $(elem).attr(\"data-ros-actionserver-chng\");\n      let actionServerSelected: string = $(elem).val();\n      widgetInstance.WidgetCallbackClass[actionServerChangeCallback](actionServerSelected);\n\n      let rosActionServerId = $(elem).attr(\"data-ros-actionserver-id\");\n      let htmlWidgetInstance = $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"]\");\n      let htmlMeta = $(htmlWidgetInstance).find(\"meta[data-ros-actionserver-id=\" + rosActionServerId + \"]\");\n      $(htmlMeta).attr(\"data-ros-actionserver-slctd\", actionServerSelected);\n    });\n  };\n\n  public WidgetSettingsCancel = (e?: MouseEvent) => {\n    this.Frontend.HideWidgetSettings();\n    e.preventDefault();\n  };\n\n  public WidgetSettingsRemove = (e?: MouseEvent) => {\n    let widgetInstanceId: number = parseInt($(\"#widgetSettings\").val());\n    currentWorkspace.remove<WidgetInstance>(widgetInstanceId, \"WidgetInstance\");\n\n    $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstanceId + \"]\").remove();\n    this.Frontend.HideWidgetSettings();\n    e.preventDefault();\n  };\n\n  private toMove: Boolean;\n  private toResize: Boolean;\n  private widgetInstanceId: number;\n  private moveX: number;\n  private moveY: number;\n  private lastX: number;\n  private lastY: number;\n\n  public ToggleMovable = (e?: MouseEvent) => {\n    $(\".jsToggleMovable\").toggleClass(\"active\");\n    if ($(\".jsToggleMovable\").hasClass(\"active\")) {\n      $(\".jsWidgetContainer\").attr(\"data-widget-conf\", \"1\");\n    } else {\n      $(\".jsWidgetContainer\").attr(\"data-widget-conf\", \"0\");\n      this.Frontend.HideWidgetSettings();\n    }\n    if (e != undefined) e.preventDefault();\n  };\n\n  public MouseDown = (e?: MouseEvent) => {\n    if ($(e.toElement).hasClass(\"jsWidgetResize\")) {\n      this.toMove = false;\n      this.toResize = true;\n    } else {\n      this.toMove = true;\n      this.toResize = false;\n    }\n    $(\".jsWidgetContainer\").css(\"z-index\", \"20\");\n    this.widgetInstanceId = parseInt($(e.toElement).closest(\".jsWidgetContainer\").attr(\"data-widget-instance-id\"));\n    this._WidgetSettings(this.widgetInstanceId);\n    $(e.toElement).closest(\".jsWidgetContainer\").addClass(\"jsMouseActive\");\n    this.lastX = e.pageX;\n    this.lastY = e.pageY;\n  };\n  public MouseMove = (e?: MouseEvent) => {\n    if (parseInt($(e.toElement).closest(\".jsWidgetContainer\").attr(\"data-widget-instance-id\")) == this.widgetInstanceId) {\n      if (this.toMove) {\n        document.getSelection().removeAllRanges();\n        this._WidgetMove(e);\n      }\n      if (this.toResize) {\n        this._WidgetResize(e);\n      }\n    } else {\n      if (this.toResize) {\n        this._WidgetResize(e);\n      } else {\n        this.widgetInstanceId = 0;\n      }\n    }\n\n    this.lastX = e.pageX;\n    this.lastY = e.pageY;\n  };\n  public MouseUp = (e?: MouseEvent) => {\n    this.widgetInstanceId = 0;\n    this.toMove = this.toResize = false;\n    $(\".jsWidgetContainer\").removeClass(\"jsMouseActive\");\n  };\n\n  private _WidgetResize(e: MouseEvent): void {\n    let d: Geometry.Point2D = this._GetMouseDistance(e);\n\n    let width: number = $(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"']\").width();\n    let height: number = $(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"']\").height();\n\n    let size: Geometry.Point2D = this._ApplySizeBoundaries({ x: width + d.x, y: height + d.y });\n    $(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"']\").width(size.x);\n    $(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"']\").height(size.y);\n\n    let widgetInstance = currentWorkspace.get<WidgetInstance>(this.widgetInstanceId, \"WidgetInstance\");\n    if (widgetInstance.WidgetCallbackClass.clbkResized != undefined) {\n      widgetInstance.WidgetCallbackClass.clbkResized(size.x, size.y);\n    }\n    widgetInstance.size.x = size.x;\n    widgetInstance.size.y = size.y;\n  };\n  private _ApplySizeBoundaries(size: Geometry.Point2D): Geometry.Point2D {\n    let widthMin: number = parseInt($(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"'] .ros-widget\").attr(\"data-min-width\"));\n    let widthMax: number = parseInt($(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"'] .ros-widget\").attr(\"data-max-width\"));\n    let heightMin: number = parseInt($(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"'] .ros-widget\").attr(\"data-min-height\"));\n    let heightMax: number = parseInt($(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"'] .ros-widget\").attr(\"data-max-height\"));\n\n    if (size.x > widthMax) {\n      size.x = widthMax;\n    }\n    if (size.x < widthMin) {\n      size.x = widthMin;\n    }\n    if (size.y > heightMax) {\n      size.y = heightMax;\n    }\n    if (size.y < heightMin) {\n      size.y = heightMin;\n    }\n\n    return size;\n  };\n  private _WidgetMove(e: MouseEvent): void {\n    let d: Geometry.Point2D = this._GetMouseDistance(e);\n\n    let left: number = parseInt($(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"']\").css(\"left\"));\n    let top: number = parseInt($(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"']\").css(\"top\"));\n\n    let pos: Geometry.Point2D = this._ApplyPositionBoundaries({ x: left + d.x, y: top + d.y });\n    $(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"']\").css(\"left\", pos.x);\n    $(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"']\").css(\"top\", pos.y);\n\n    let widgetInstance: WidgetInstance = currentWorkspace.get<WidgetInstance>(this.widgetInstanceId, \"WidgetInstance\");\n    if (widgetInstance.WidgetCallbackClass.clbkMoved != undefined) {\n      widgetInstance.WidgetCallbackClass.clbkMoved(pos.x, pos.y);\n    }\n    widgetInstance.position.x = pos.x;\n    widgetInstance.position.y = pos.y;\n  };\n  private _ApplyPositionBoundaries(pos: Geometry.Point2D): Geometry.Point2D {\n    let offset: any = $(\".jsTabContent.jsShow\").offset();\n    let xMin: number = offset.left + 1;\n    let yMin: number = offset.top;\n    let xMax: number = xMin + $(\".jsTabContent.jsShow\").width() - $(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"']\").width() - 1;\n    let yMax: number = yMin + $(\".jsTabContent.jsShow\").height() - $(\".jsWidgetContainer[data-widget-instance-id='\" + this.widgetInstanceId + \"']\").height() - 1;\n\n    if (pos.x > xMax) {\n      pos.x = xMax;\n    }\n    if (pos.x < xMin) {\n      pos.x = xMin;\n    }\n    if (pos.y > yMax) {\n      pos.y = yMax;\n    }\n    if (pos.y < yMin) {\n      pos.y = yMin;\n    }\n\n    return pos;\n  };\n  private _GetMouseDistance(e: MouseEvent): Geometry.Point2D {\n    return { x: e.pageX - this.lastX, y: e.pageY - this.lastY };\n  };\n\n}\n","import { storage } from \"../super/storage\";\n// import {db} from \"../super/db.ts\";\nimport { lightbox } from \"../super/lightbox\";\nimport { EventsParent } from \"./events\";\nimport { Workspace } from \"../model/workspace\";\nimport { SerializedWorkspace } from \"../model/serialized_workspace\";\nimport { currentWorkspace } from \"../model/workspace\";\n\ndeclare var MyApp: any;\n\nexport class WorkspaceEvents extends EventsParent {\n\n  constructor() {\n    super();\n\n    this.DelegateEvent(\".jsOpenWorkspace\", \"click\", this.OpenWorkspace);\n    this.DelegateEvent(\".jsSaveWorkspace\", \"click\", this.SaveWorkspace);\n    this.DelegateEvent(\".jsLoadWorkspace\", \"click\", this.LoadWorkspace);\n    this.DelegateEvent(\".jsRemoveWorkspace\", \"click\", this.RemoveWorkspace);\n  }\n\n  public OpenWorkspace = (e?: MouseEvent) => {\n    this._OpenWorkspace();\n    e.preventDefault();\n  }\n  private _OpenWorkspace() {\n    let workspaces: Array<SerializedWorkspace> = storage.GetWorkspaces();\n    let html = MyApp.templates.workspaceList(workspaces);\n    lightbox.ShowLightbox(html);\n  }\n\n  public SaveWorkspace = (e?: MouseEvent) => {\n    if (window.confirm(\"Save a new workspace?\")) {\n      this._SaveWorkspace();\n    } else {\n\n    }\n    e.preventDefault();\n  }\n  private _SaveWorkspace(): void {\n    let workspace = new SerializedWorkspace();\n    workspace = storage.NewWorkspace($(\"#jsWorkspaceName\").val());\n    workspace.data = currentWorkspace.extractData();\n    storage.SaveWorkspace(workspace);\n  }\n\n  public LoadWorkspace = (e?: MouseEvent) => {\n    let workspace_id: number = parseInt($(e.toElement).attr(\"data-workspace-id\"));\n    this._LoadWorkspace(workspace_id);\n    e.preventDefault();\n  }\n  private _LoadWorkspace(workspace_id: number): void {\n    let workspace: SerializedWorkspace = storage.GetWorkspace(workspace_id);\n    currentWorkspace.loadWorkspace(workspace);\n    lightbox.CloseLightbox();\n  }\n\n  public RemoveWorkspace = (e?: MouseEvent) => {\n    let workspace_id: number = parseInt($(e.toElement).attr(\"data-workspace-id\"));\n    let workspace = storage.GetWorkspace(workspace_id);\n    this._RemoveWorkspace(workspace);\n    e.preventDefault();\n  }\n  private _RemoveWorkspace(workspace: SerializedWorkspace): void {\n    if (window.confirm(\"Are you sure you want to remove workspace #\" + workspace.id + \" (\" + workspace.id + \") ?\")) {\n      let html = MyApp.templates.workspaceList(storage.RemoveWorkspace(workspace.id));\n      lightbox.UpdateLightbox(html);\n    } else {\n      // do nothing\n    }\n  }\n\n}\n","/// <reference path=\"./typings/tsd.d.ts\" />\n\n// Events\nimport {TabEvents} from \"./events/tab\";\nimport {WidgetEvents} from \"./events/widget\";\nimport {WidgetInstanceEvents} from \"./events/widget_instance\";\nimport {RosEvents} from \"./events/ros\";\nimport {WorkspaceEvents} from \"./events/workspace\";\n\n// Super\nimport {lightbox} from \"./super/lightbox\";\nimport {storage} from \"./super/storage\";\nimport {Frontend} from \"./super/frontend\";\n\n// Models\nimport {Widget} from \"./model/widget\";\nimport {Workspace} from \"./model/workspace\";\nimport {currentWorkspace} from \"./model/workspace\";\n\nfunction init() {\n  $(document).ready(function () {\n    var url = window.location.href;\n    url = url.replace(/.*:\\/\\//i,\"\");\n    url = url.replace(/:\\d{1,5}/i,\"\");\n    url = url.replace(/\\/.*/i,\"\");\n    $(\"#jsRosUrl\").val(\"ws://\" + url + \":9090\");\n\n    var ros: ROSLIB.Ros = new ROSLIB.Ros(\"\");\n    window[\"ros\"] = ros;\n    events(ros);\n    lightbox.CreateLightbox();\n    currentWorkspace.initWorkspace();\n  });\n}\n\nfunction events(ros: ROSLIB.Ros): void {\n  let tabEvents: TabEvents = new TabEvents();\n  let widgetEvents: WidgetEvents = new WidgetEvents(ros);\n  let widgetInstanceEvents: WidgetInstanceEvents = new WidgetInstanceEvents(ros);\n  let rosEvents: RosEvents = new RosEvents(ros);\n  let workspace: WorkspaceEvents = new WorkspaceEvents();\n\n  rosEvents.Connect();\n}\n\ninit();\n\n","import {Workspace} from \"./workspace\";\nimport {SerializedWorkspace} from \"../model/serialized_workspace\";\n\nexport class ROSWeb {\n\n  constructor() {\n    this.Workspaces = new Array<SerializedWorkspace>();\n  }\n\n  public Workspaces: SerializedWorkspace[];\n\n}\n","export class SerializedWorkspace {\n\n  public id: number;\n  public name: string;\n  public data: string;\n\n}","import {currentWorkspace} from \"./workspace\"\nimport {frontend} from \"../super/frontend\"\n\nexport class Tab {\n  \n  public id: number;\n  public name: string;\n  public active: boolean;\n  \n  constructor(name?: string) {\n    currentWorkspace.create<Tab>(this);\n    this.name = \"Tab #\" + this.id;\n\n    frontend.newTab(this);\n\n    this.setActive();\n  }\n\n  public setActive() {\n    this.active = true;\n    frontend.selectTab(this);\n  }\n  \n}","/// <reference path=\"../typings/tsd.d.ts\" />\n\nimport { frontend } from \"../super/frontend\"\nimport { currentWorkspace } from \"./workspace\"\n\nexport class Widget {\n\n  public id: number;\n  public widget_group_id: number;\n  public name: string;\n  public image_url: string;\n  public url: string;\n  public alias: string;\n  public html: string;\n\n  constructor(widget_group_id, name, alias, url) {\n    this.widget_group_id = widget_group_id;\n    this.name = name;\n    this.url = url;\n    this.alias = alias;\n    \n    currentWorkspace.create<Widget>(this);\n\n    frontend.newWidget(this);\n  }\n\n}\n","import { frontend } from \"../super/frontend\"\nimport { currentWorkspace } from \"./workspace\"\n\nexport class WidgetGroup {\n\n  public id: number;\n  public name: string;\n\n  constructor(name: string) {\n    this.name = name;\n\n    currentWorkspace.create<WidgetGroup>(this);\n\n    frontend.newWidgetGroup(this);\n  }\n\n}","import { WidgetGroup } from './widget_group';\n// Models\nimport { Geometry } from \"../types/Geometry\"\nimport { Widget } from \"./widget\"\nimport { Tab } from \"./tab\"\nimport { frontend } from \"../super/frontend\"\nimport { currentWorkspace } from \"./workspace\"\nimport { instance_loader } from \"../super/instance_loader\"\n\nexport class WidgetInstance {\n\n  public id: number;\n  public tab_id: number;\n  public widget_id: number;\n  public WidgetCallbackClass: any;\n  public position: Geometry.Point2D;\n  public size: Geometry.Point2D;\n\n  constructor(widget: Widget, tab: Tab, position: Geometry.Point2D = {x:0, y:0}, size: Geometry.Point2D = {x:0, y:0}) {\n    this.widget_id = widget.id;\n    this.tab_id = tab.id;\n    this.position = position;\n    this.size = size;\n\n    currentWorkspace.create<WidgetInstance>(this);\n\n    // this.WidgetCallbackClass = instance_loader.getInstance<any>(window, \"Widget\" + widget.alias, this.id);\n    this.WidgetCallbackClass = new window[\"Widget\" + widget.alias](this.id);\n\n    frontend.insertWidgetInstance(this, () => this.WidgetCallbackClass.clbkCreated());\n  }\n\n}\n","/// <reference path=\"../typings/tsd.d.ts\" />\n\n// model\nimport { Tab } from \"./tab\"\nimport { WidgetGroup } from \"./widget_group\"\nimport { Widget } from \"./widget\"\nimport { WidgetInstance } from \"./widget_instance\"\nimport { SerializedWorkspace } from \"../model/serialized_workspace\";\n\n// super\nimport { frontend } from \"../super/frontend\"\n\nvar className: string = \"\";\n\ninterface genericList {\n  object: string;\n  list: Array<any>;\n}\ninterface genericCounter {\n  object: string;\n  counter: number;\n}\nfunction genericFilter(list: genericList | genericCounter, index: number, array: Array<any>): boolean {\n  return (list.object == className);\n}\n\nexport class Workspace {\n\n  public id: number;\n  public name: string;\n  public created: Date;\n  public modified: Date;\n\n  private Lists: genericList[];\n  private Counters: genericCounter[];\n\n  constructor() {\n    this._clearLists();\n    this._clearCounters();\n  }\n\n  public initWorkspace() {\n    this._initWorkspace();\n  }\n  private _initWorkspace() {\n    let wg: WidgetGroup = new WidgetGroup(\"ROS basics\");\n    new Widget(wg.id, \"Topic Subscriber\", \"TopicSubscriber\", \"./widgets/topic_subscriber\");\n    new Widget(wg.id, \"Topic Publisher\", \"TopicPublisher\", \"./widgets/topic_publisher\");\n    new Widget(wg.id, \"Param Viewer\", \"ParamViewer\", \"./widgets/param_viewer\");\n    new Widget(wg.id, \"Service Viewer\", \"ServiceViewer\", \"./widgets/service_viewer\");\n    new Widget(wg.id, \"ActionLib Tool\", \"ActionLibTool\", \"./widgets/action_lib_tool\");\n \n    wg = new WidgetGroup(\"Sensors\");\n    new Widget(wg.id, \"Google Maps GPS Viewer\", \"GoogleMapsGpsViewer\", \"./widgets/gmaps_gps\");\n    new Widget(wg.id, \"Camera Viewer\", \"CameraViewer\", \"./widgets/camera_viewer\");\n    new Widget(wg.id, \"Laser Scan Viewer\", \"LaserScanViewer\", \"./widgets/laser_scan_viewer\");\n    new Widget(wg.id, \"IMU Viewer\", \"ImuViewer\", \"./widgets/imu_viewer\");\n \n    wg = new WidgetGroup(\"3D Viewer\");\n    new Widget(wg.id, \"ROS 3D Viewer\", \"ROS3DViewer\", \"./widgets/ros_3d_viewer\");\n\n    wg = new WidgetGroup(\"Diagnostics\");\n    new Widget(wg.id, \"Diagnostics Viewer\", \"DiagnosticsViewer\", \"./widgets/diagnostics_viewer\");\n    new Widget(wg.id, \"Log reader\", \"LogReader\", \"./widgets/log_reader\");\n\n    wg = new WidgetGroup(\"Development\");\n    new Widget(wg.id, \"New Widget\", \"NewWidget\", \"./widgets/new_widget\");\n    new Widget(wg.id, \"Maps Mod\", \"GoogleMapsGpsViewerMod\", \"./widgets/gmaps_gps_mod\");\n\n  }\n\n  private _clearWorkspace() {\n    frontend.ClearWorkspace();\n\n    this._clearLists();\n    this._clearCounters();\n\n    this._initWorkspace();\n  }\n  private _clearLists() {\n    this.Lists = new Array<genericList>(\n      { object: \"Tab\", list: new Array<Tab>() },\n      { object: \"WidgetGroup\", list: new Array<Tab>() },\n      { object: \"Widget\", list: new Array<Widget>() },\n      { object: \"WidgetInstance\", list: new Array<WidgetInstance>() }\n    );\n  }\n  private _clearCounters() {\n    this.Counters = new Array<genericCounter>(\n      { object: \"Tab\", counter: 0 },\n      { object: \"WidgetGroup\", counter: 0 },\n      { object: \"Widget\", counter: 0 },\n      { object: \"WidgetInstance\", counter: 0 }\n    );\n  }\n\n  public loadWorkspace(workspace: SerializedWorkspace): void {\n    let data: { Lists: genericList[], Counters: genericCounter[] } = JSON.parse(workspace.data);\n\n    this._clearWorkspace();\n\n    data.Lists.forEach((glist: genericList, i: number) => {\n      if (glist.object == \"Tab\") {\n        glist.list.forEach((tab: Tab, j: number) => {\n          new Tab(tab.name);\n        });\n      }\n    });\n\n    data.Lists.forEach((glist: genericList, i: number) => {\n      if (glist.object == \"WidgetInstance\") {\n        glist.list.forEach((widgetInstance: WidgetInstance, j: number) => {\n          let widget: Widget = this.get<Widget>(widgetInstance.widget_id, \"Widget\");\n          let tab: Tab = this.get<Tab>(widgetInstance.tab_id, \"Tab\");\n          let createdWidgetInstance = new WidgetInstance(widget, tab, widgetInstance.position, widgetInstance.size);\n        });\n      }\n    });\n\n    this.Counters = data.Counters;\n  }\n  public extractData(): string {\n    let data: any = { Lists: this.Lists, Counters: this.Counters };\n    data.Lists.forEach((list: genericList, index: number) => {\n      switch (list.object) {\n        case \"WidgetInstance\":\n          list.list.forEach((widgetInstance: any, index: number) => {\n            widgetInstance[\"WidgetCallbackClass\"] = null;\n          });\n          break;\n      }\n    });\n    let dataString: string = JSON.stringify(data);\n    return dataString;\n  }\n\n  private getCounter<T>(): genericCounter {\n    let counter = this.Counters.filter(genericFilter);\n    if (counter.length != 1) {\n      throw new Error(\"Workspace list searching error\");\n    }\n    return counter[0];\n  }\n  public getList<T>(aClassName?: string): any[] {\n    if (aClassName != undefined) className = aClassName;\n\n    let list = this.Lists.filter(genericFilter);\n\n    if (list.length != 1) {\n      throw new Error(\"Workspace list searching error\");\n    }\n\n    return list[0].list;\n  }\n  public create<T extends { id: number }>(object: T): void {\n    let aClassName: string = object.constructor[\"name\"];\n    className = aClassName;\n\n    let counter: genericCounter = this.getCounter<T>();\n    let list: any[] = this.getList<T>();\n\n    object.id = ++counter.counter;\n    list.push(object);\n  }\n\n  public get<T extends { id: number }>(id: number, aClassName: string): T {\n    className = aClassName;\n    let list = this.Lists.filter(genericFilter)[0].list;\n\n    function getFilter(element: T, index: number, array: Array<T>): boolean {\n      return element.id == id;\n    };\n    let filteredList: any[] = list.filter(getFilter);\n\n    if (filteredList.length != 1) {\n      console.log(list);\n      throw new Error(\"No unique \" + aClassName + \" found with id equals to \" + id + \" on the list above\");\n    }\n\n    return filteredList[0];\n  }\n  public getCurrentTab(): Tab {\n    className = \"Tab\";\n    let list = this.Lists.filter(genericFilter)[0].list;\n    let tab: Tab;\n\n    if (list.length == 0) {\n      tab = new Tab();\n    }\n\n    function activeTabFilter(tab: Tab, index: number, array: Array<Tab>): boolean {\n      return tab.active == true;\n    }\n    let filteredList: Tab[] = list.filter(activeTabFilter);\n    tab = filteredList[0];\n\n    return tab;\n  }\n\n  public remove<T extends { id: number }>(id: number, aClassName: string) {\n    className = aClassName;\n    let list = this.Lists.filter(genericFilter)[0].list;\n\n    let toRemove: number = null;\n    list.forEach((obj: { id: number }, index: number) => {\n      if (obj.id == id) {\n        toRemove = index;\n      }\n    });\n\n    if (toRemove == null) {\n      console.log(list);\n      throw new Error(\"No unique \" + aClassName + \" found with id equals to \" + id + \" on the list above\");\n    } else {\n      list.splice(toRemove, 1);\n    }\n  }\n\n}\n\nexport var currentWorkspace: Workspace = new Workspace();\n","/// <reference path=\"../typings/tsd.d.ts\" />\n\nexport class Design {\n\n  public tabTopOffset: number = 0;\n  public tabHeight: number = 0;\n\n  constructor() {\n    this.adjustWindowResize();\n  }\n\n  public adjustWindowResize(): void {\n    this._calculateTabTopOffset();\n    this._adjustContentHeight();\n    this._adjustWidgetsHeight();\n  }\n\n  private _calculateTabTopOffset(): void {\n    let totalHeight = $(window).height();\n    let usedHeight = this._getTotalHeight(\"#header1\") + this._getTotalHeight(\"#header2\");\n    this.tabHeight = totalHeight - usedHeight;\n    this.tabTopOffset = usedHeight;\n  }\n\n  private _adjustContentHeight(): void {\n    $(\"#content\").height(this.tabHeight);\n  }\n\n  private _adjustWidgetsHeight(): void {\n    // $(\".jsWidgetsContainer\").height(this.tabHeight).css(\"top\", this.tabTopOffset);\n    $(\".jsMenuWidgetsSettings\").height(this.tabHeight).css(\"top\", this.tabTopOffset);\n  }\n\n  private _getTotalHeight(selector: string): number {\n    let pad: number = parseInt($(selector).css(\"paddingTop\")) + parseInt($(selector).css(\"paddingBottom\"));\n    let hei: number = $(selector).height();\n    let bor: number = parseInt($(selector).css(\"borderTopWidth\")) + parseInt($(selector).css(\"borderBottomWidth\"));\n    let totalHeight: number = pad + hei + bor;\n    return totalHeight;\n  }\n\n}","/// <reference path=\"../typings/tsd.d.ts\" />\n\n// Models\nimport { Tab } from \"../model/tab\";\nimport { WidgetGroup } from \"../model/widget_group\";\nimport { Widget } from \"../model/widget\";\nimport { WidgetInstance } from \"../model/widget_instance\";\nimport { currentWorkspace } from \"../model/workspace\";\n\n// Super classes\nimport { Names } from \"./names\";\nimport { Trigger } from \"./trigger\";\n\n// types\nimport { Geometry } from \"../types/Geometry\";\n\ndeclare var MyApp: any;\n\ninterface TypeDef {\n  examples: string[],\n  fieldarraylen: number[],\n  fieldnames: string[],\n  fieldtypes: string[],\n  type: string\n}\n\nexport class Frontend {\n\n  public tabContainerId: string;\n  public tabContentContainerId: string;\n\n  private Names: Names;\n  public Trigger: Trigger;\n\n  private ActiveTabId: number;\n\n  constructor() {\n    this.tabContainerId = \"header2\";\n    this.tabContentContainerId = \"tabs\";\n\n    this.Names = new Names();\n    this.Trigger = new Trigger();\n  }\n\n  public InsertWidgetsTags(): void {\n    currentWorkspace.getList<Widget>().forEach((value: Widget, index: number, array: Widget[]) => {\n      $(\"body\").append(\"<script type='text/javascript' src='\" + value.url.slice(2) + \"/main.js\" + \"'></script>\");\n      // $(\"body\").append(\"<link rel='stylesheet' type='text/css' href='\" + value.url.slice(2) + \"/main.css\" + \"' />\");\n    });\n  }\n  public LoadingLink(element: Element, disabled: Boolean = true) {\n    if (disabled) {\n      $(element).addClass(\"disabled\");\n    } else {\n      $(element).removeClass(\"disabled\");\n    }\n  }\n  public ReleaseLink(element: Element) {\n    this.LoadingLink(element, false);\n  }\n\n  public formTab(tab?: Tab): Tab {\n    if (tab) {\n      tab.name = \"tab #\" + tab.id;\n      return tab;\n    }\n    return new Tab();\n  }\n\n  public closeTab(tab_id: number): void {\n    $(\".jsTab[data-tab-id='\" + tab_id + \"']\").remove();\n    $(\".jsTabContent[data-tab-id='\" + tab_id + \"']\").remove();\n  }\n\n  public selectTab(tab: Tab): void {\n    let parentClassName = this.Names.classTabParent;\n    $(\".\" + parentClassName).removeClass(\"jsActive\");\n    $(\".\" + parentClassName + \"[data-tab-id=\" + tab.id + \"]\").addClass(\"jsActive\");\n    let className = this.Names.eventsClassPrefix + \"Tab\";\n    $(\".\" + className).removeClass(\"jsActive\");\n    $(\".\" + className + \"[data-tab-id=\" + tab.id + \"]\").addClass(\"jsActive\");\n    let tabClassName = this.Names.classTabContent;\n    $(\".\" + tabClassName).removeClass(\"jsShow\").addClass(\"jsHide\");\n    $(\".\" + tabClassName + \"[data-tab-id=\" + tab.id + \"]\").removeClass(\"jsHide\").addClass(\"jsShow\");\n    this.ActiveTabId = tab.id;\n  }\n\n  public LoadWidgetContentAndInsert(widgetInstance: WidgetInstance, afterContentCallback: any): void {\n    this._loadWidgetContentAndInsert(widgetInstance, afterContentCallback);\n  }\n  private _loadWidgetContentAndInsert(widgetInstance: WidgetInstance, afterContentCallback: any): void {\n    let tabId: number = widgetInstance.tab_id != undefined ? widgetInstance.tab_id : this._getForcedCurrentTabId();\n    let fn = this._insertWidget;\n    let widget: Widget = currentWorkspace.get<Widget>(widgetInstance.widget_id, \"Widget\");\n    $.ajax({\n      url: widget.url.slice(2) + \"/index.hbs\",\n      beforeSend: function () {\n\n      },\n      success: function (data: string) {\n        MyApp.templates._widgetsTemplates[widget.alias] = Handlebars.compile(data);\n        fn(widgetInstance, tabId, afterContentCallback);\n      },\n      error: function (e1: any, e2: any) {\n        throw \"Widget file not found!\";\n      }\n    });\n  }\n\n  public insertWidgetInstance(widgetInstance: WidgetInstance, afterContentCallback: any): void {\n    let widget: Widget = currentWorkspace.get<Widget>(widgetInstance.widget_id, \"Widget\");\n    if (MyApp.templates._widgetsTemplates === undefined) {\n      MyApp.templates._widgetsTemplates = [];\n    }\n    if (MyApp.templates._widgetsTemplates[widget.alias] === undefined) {\n      this._loadWidgetContentAndInsert(widgetInstance, afterContentCallback);\n    } else {\n      let tabId: number = widgetInstance.tab_id != undefined ? widgetInstance.tab_id : this._getForcedCurrentTabId();\n      this._insertWidget(widgetInstance, tabId, afterContentCallback);\n    }\n  }\n  private _insertWidget(widgetInstance: WidgetInstance, currentTabId: number, afterContentCallback: any): void {\n    let content: string, html: string;\n    let widget: Widget = currentWorkspace.get<Widget>(widgetInstance.widget_id, \"Widget\");\n    content = MyApp.templates._widgetsTemplates[widget.alias](widgetInstance);\n\n    let width: number = parseInt($(content).attr(\"data-width\"));\n    let height: number = parseInt($(content).attr(\"data-height\"));\n    let left: number = $(\".jsTabContent.jsShow\").width() / 2;\n    let top: number = $(\".jsTabContent.jsShow\").height() / 2;\n\n    if (widgetInstance.position.x == 0 && widgetInstance.position.y == 0) {\n      widgetInstance.position = { x: left, y: top };\n    }\n    if (widgetInstance.size.x == 0 && widgetInstance.size.y == 0) {\n      widgetInstance.size = { x: width, y: height };\n    }\n\n    html = MyApp.templates.widget({ WidgetInstance: widgetInstance, content: content, left: widgetInstance.position.x + \"px\", top: widgetInstance.position.y + \"px\", width: widgetInstance.size.x + \"px\", height: widgetInstance.size.y + \"px\" });\n    $(\"div.jsTabContent[data-tab-id=\" + currentTabId + \"]\").append(html);\n\n    let trigger = new Trigger();\n    trigger.widgetSettings(widgetInstance.id);\n    if (afterContentCallback != undefined) {\n      afterContentCallback();\n    }\n  }\n\n  // Widget Instance properties\n  public setWidgetInstancePosition(widgetInstance: WidgetInstance, position: Geometry.Point2D): void {\n    $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstance.id + \"]\").css({ top: position.y, left: position.x });\n  };\n  public setWidgetInstanceSize(widgetInstance: WidgetInstance, size: Geometry.Point2D): void {\n    $(\".jsWidgetContainer[data-widget-instance-id=\" + widgetInstance.id + \"]\").css({ height: size.y, width: size.x });\n  };\n\n  private _getForcedCurrentTabId(): number {\n    let currentTabId: number = this._getCurrentTabId();\n    if (currentTabId === 0) {\n      this.Trigger.newTab();\n    }\n    return this._getCurrentTabId();\n  }\n  private _getCurrentTabId(): number {\n    let tabIdStr: string = $(\"div.jsTab.jsActive\").attr(\"data-tab-id\");\n    if (tabIdStr === undefined) {\n      return 0;\n    }\n    let tabId: number = parseInt(tabIdStr);\n    return tabId;\n  }\n\n  // Show menu methods\n  public showWidgetsMenu(): void {\n    $(\".balloon\").not(\".\" + this.Names.classWidgetsContainer).hide();\n    $(\".\" + this.Names.classWidgetsContainer).animate({ height: 'toggle' });\n  }\n  public ShowWidgetSettings(): void {\n    $(\".jsMenuWidgetsSettings\").animate({ right: 0 });\n  }\n  public HideWidgetSettings(): void {\n    $(\".jsMenuWidgetsSettings\").animate({ right: -300 });\n    $(\".jsWidgetContainer\").attr(\"data-widget-conf\", \"0\");\n    $(\".jsToggleMovable\").removeClass(\"active\");\n  }\n  public ShowConfiguration(): void {\n    $(\".balloon\").not(\".\" + this.Names.classConfiguration).hide();\n    $(\".\" + this.Names.classConfiguration).animate({ height: 'toggle' });\n  }\n\n  // Update Selector Methods\n  public UpdateRosTopicSelectors(response: { topics: string[], types: string[], details: TypeDef[] }): void {\n    $(\".jsRosTopicSelector\").html(\"\");\n    var html = '';\n    $(\".jsRosTopicSelector\").each((i: number, element: Element) => {\n      let elementWidgetInstance = $(\".jsWidgetContainer[data-widget-instance-id=\" + $(element).attr(\"data-widget-instance-id\") + \"]\");\n      let elementMeta = $(elementWidgetInstance).find(\"meta[data-ros-topic-id='\" + $(element).attr(\"data-ros-topic-id\") + \"']\");\n      let subscribedTopic: string = $(elementMeta).attr(\"data-ros-topic-slctd\");\n\n      html = MyApp.templates.rosTopicSelectorOptions({ name: '-- Select a topic to subscribe --', value: \"\" });\n      let strTypes: string = $(element).attr(\"data-ros-topic-type\");\n      let types = (strTypes == \"\") ? [] : strTypes.split(\"|\");\n      response.topics.forEach((value: string, index: number) => {\n        let selected: boolean = (value == subscribedTopic) ? true : false;\n        if ((types.indexOf(response.types[index]) > -1) || types.length == 0) {\n          html += MyApp.templates.rosTopicSelectorOptions({ name: value, value: value, type: response.types[index], selected: selected });\n        }\n      });\n      $(element).append(html);\n    });\n  }\n  public UpdateRosParamSelectors(response: string[]): void {\n    $(\".jsRosParamSelector\").html(\"\");\n    var html = '';\n    $(\".jsRosParamSelector\").each((i: number, element: Element) => {\n      let elementWidgetInstance = $(\".jsWidgetContainer[data-widget-instance-id=\" + $(element).attr(\"data-widget-instance-id\") + \"]\");\n      let elementMeta = $(elementWidgetInstance).find(\"meta[data-ros-param-id='\" + $(element).attr(\"data-ros-param-id\") + \"']\");\n      let selectedParam: string = $(elementMeta).attr(\"data-ros-param-slctd\");\n\n      html = MyApp.templates.rosParamSelectorOptions({ name: '-- Select a param to manage --', value: \"\" });\n      response.forEach((value: string, index: number) => {\n        let selected: boolean = (value == selectedParam) ? true : false;\n        html += MyApp.templates.rosParamSelectorOptions({ name: value, value: value, selected: selected });\n      });\n      $(element).append(html);\n    });\n  }\n  public UpdateRosServiceSelectors(response: string[]): void {\n    $(\".jsRosServiceSelector\").html(\"\");\n    var html = '';\n    $(\".jsRosServiceSelector\").each((i: number, element: Element) => {\n      let elementWidgetInstance = $(\".jsWidgetContainer[data-widget-instance-id=\" + $(element).attr(\"data-widget-instance-id\") + \"]\");\n      let elementMeta = $(elementWidgetInstance).find(\"meta[data-ros-service-id='\" + $(element).attr(\"data-ros-service-id\") + \"']\");\n      let selectedService: string = $(elementMeta).attr(\"data-ros-service-slctd\");\n\n      html = MyApp.templates.rosServiceSelectorOptions({ name: '-- Select a service --', value: \"\" });\n      response.forEach((value: string, index: number) => {\n        let selected: boolean = (value == selectedService) ? true : false;\n        html += MyApp.templates.rosServiceSelectorOptions({ name: value, value: value, selected: selected });\n      });\n      $(element).append(html);\n    });\n  }\n  public UpdateActionServerSelectors(response: string[]): void {\n    $(\".jsRosActionServerSelector\").html(\"\");\n    var html = '';\n    $(\".jsRosActionServerSelector\").each((i: number, element: Element) => {\n      let elementWidgetInstance = $(\".jsWidgetContainer[data-widget-instance-id=\" + $(element).attr(\"data-widget-instance-id\") + \"]\");\n      let elementMeta = $(elementWidgetInstance).find(\"meta[data-ros-actionserver-id='\" + $(element).attr(\"data-ros-actionserver-id\") + \"']\");\n      let selectedActionServer: string = $(elementMeta).attr(\"data-ros-actionserver-slctd\");\n\n      html = MyApp.templates.rosActionServerSelectorOptions({ name: '-- Select an action server to subscribe --', value: \"\" });\n      let strTypes: string = $(element).attr(\"data-ros-actionserver-type\");\n      let types = (strTypes == \"\") ? [] : strTypes.split(\"|\");\n      response.forEach((value: string, index: number) => {\n        let selected: boolean = (value == selectedActionServer) ? true : false;\n        if ((types.indexOf(response[index]) > -1) || types.length == 0) {\n          html += MyApp.templates.rosActionServerSelectorOptions({ name: value, value: value, selected: selected });\n        }\n      });\n      $(element).append(html);\n    });\n  }\n\n  // Update Workspace Methods\n  public ClearWorkspace() {\n    $(\".jsWidgetGroups\").html(\"\");\n    $(\".jsTab\").remove();\n    $(\"#tabs\").html(\"\");\n  }\n\n  // Model frontend\n  public newTab(tab: Tab): void {\n    var tabHtml = MyApp.templates.tab(tab);\n    var tabContentHtml = MyApp.templates.tabContent(tab);\n    // insert tab\n    $(tabHtml).insertBefore(\"#\" + this.tabContainerId + \" > .clearfix\");\n    //document.getElementById(this.tabContainerId).innerHTML += tabHtml;\n    // insert tab content\n    document.getElementById(this.tabContentContainerId).innerHTML += tabContentHtml;\n  }\n  public newWidgetGroup(widgetGroup: WidgetGroup) {\n    let html: string = MyApp.templates.widgetGroup(widgetGroup);\n    $(\".jsWidgetGroups\").append(html);\n  }\n  public newWidget(widget: Widget) {\n    let html = MyApp.templates.widgetItem(widget);\n    $(\"#jsWidgetGroup\" + widget.widget_group_id + \" .jsWidgets\").append(html);\n    $(\"body\").append(\"<script type='text/javascript' src='\" + widget.url.slice(2) + \"/main.js'></script>\");\n  }\n  public newWidgetInstance(widgetInstance: WidgetInstance) {\n    this.insertWidgetInstance(widgetInstance, () => { });\n  }\n\n}\n\nexport var frontend: Frontend = new Frontend();\n","/// <reference path=\"../typings/tsd.d.ts\" />\n\ndeclare var MyApp: any;\n\nclass Lightbox {\n\n  constructor() {\n  }\n\n  public CreateLightbox() {\n    var lightboxHtml = MyApp.templates.lightbox();\n    $(lightboxHtml).insertAfter(\"#footer\");\n  }\n\n  public ShowLightbox(content?: string): void {\n    $(\"#lightbox\").html(\"\");\n\n    let wHeight: number = $(window).height();\n    let wWidth: number = $(window).width();\n    $(\"#lightboxBackground\").css({ height: wHeight, width: wWidth }).fadeIn(500);\n\n    if (content != undefined) {\n      this.UpdateLightbox(content);\n    }\n  }\n\n  public CloseLightbox(): void {\n    $(\"#lightboxBackground\").hide();\n  }\n\n  public UpdateLightbox(content: string): void {\n    $(\"#lightbox\").html(content);\n    let wHeight: number = $(window).height();\n    let wWidth: number = $(window).width();\n    let width = $(\"#lightbox\").width();\n    let height = $(\"#lightbox\").height();\n    let left = (wWidth - width) / 2;\n    let top = (wHeight - height) / 2;\n    $(\"#lightbox\").css({ top: top, left: left });\n  }\n\n}\n\nexport var lightbox: Lightbox = new Lightbox();\n","export class Names {\n  \n  public eventsClassPrefix: string = \"jsEvent\";\n  \n  public classTabParent: string = \"jsTab\";\n  public classTabContent: string = \"jsTabContent\";\n  \n  public classWidgetsContainer: string = \"jsWidgetsContainer\";\n  public classWidgetsSettings: string = \"jsWidgetsSettings\";\n  public classWidgets: string = \"jsWidgets\";\n  public classWidgetsList: string = \"jsWidgetsList\";\n  public classConfiguration: string = \"jsConfigurationContainer\";\n  \n  constructor() {\n    \n  }\n  \n}","import { Workspace } from \"../model/workspace\";\nimport { ROSWeb } from \"../model/rosweb\";\nimport {SerializedWorkspace} from \"../model/serialized_workspace\";\n\nclass Storage {\n\n  private count: number;\n\n  constructor() {\n    this.count = 0;\n    if (localStorage[\"ROSWeb\"] == undefined) {\n      let rosweb = new ROSWeb();\n      localStorage.setItem(\"ROSWeb\", JSON.stringify(rosweb));\n      console.log(\"creating rosweb localstorage\");\n    }\n  }\n  public Init(): void {\n  }\n\n  // Get\n  public GetWorkspaces(): Array<SerializedWorkspace> {\n    let rosweb: ROSWeb;\n    try {\n      rosweb = JSON.parse(localStorage.getItem(\"ROSWeb\"));\n    } catch (e) {\n      alert(e);\n    }\n    return rosweb.Workspaces;\n  }\n\n  public GetWorkspace(workspace_id: number): SerializedWorkspace {\n    let toReturn: SerializedWorkspace;\n    this.GetWorkspaces().forEach((workspace: SerializedWorkspace, index: number, array: SerializedWorkspace[]) => {\n      if (workspace.id == workspace_id) {\n        toReturn = workspace;\n      }\n    });\n    return toReturn;\n  }\n\n  // New\n  public NewWorkspace(name: string): SerializedWorkspace {\n    let id: number;\n    let workspaces: Array<SerializedWorkspace> = this.GetWorkspaces();\n    function sortByIdDesc(obj1: SerializedWorkspace, obj2: SerializedWorkspace) {\n      if (obj1.id > obj2.id) return -1;\n      if (obj1.id < obj2.id) return 1;\n    }\n    if (workspaces.length == 0) {\n      id = 1;\n    } else {\n      let lastWorkspace: SerializedWorkspace = workspaces.sort(sortByIdDesc)[0];\n      id = lastWorkspace.id + 1;\n    }\n\n    let workspace = new SerializedWorkspace();\n    workspace.id = id;\n    workspace.name = name;\n    return workspace;\n  }\n\n  // Save\n  public SaveWorkspace(workspace: SerializedWorkspace): void {\n    let rosweb: any = JSON.parse(localStorage.getItem(\"ROSWeb\"));\n    rosweb.Workspaces.push(workspace);\n    localStorage.setItem(\"ROSWeb\", JSON.stringify(rosweb));\n  }\n\n  // Load\n  public LoadWorkspace(id: number): void {\n    try {\n      let workspaces: Array<SerializedWorkspace> = JSON.parse(localStorage[\"ROSWeb\"][\"workspaces\"]);\n    }\n    catch (e) {\n      alert(e);\n    }\n  }\n\n  // Remove\n  public RemoveWorkspace(id: number): SerializedWorkspace[] {\n    let rosweb: ROSWeb;\n    let updatedRosweb: ROSWeb = new ROSWeb();\n    function filterById(workspace: SerializedWorkspace) {\n      return workspace.id != id;\n    }\n    try {\n      rosweb = JSON.parse(localStorage.getItem(\"ROSWeb\"));\n      updatedRosweb.Workspaces = new Array<SerializedWorkspace>();\n      updatedRosweb.Workspaces = rosweb.Workspaces.filter(filterById);\n      localStorage.setItem(\"ROSWeb\", JSON.stringify(updatedRosweb));\n      return updatedRosweb.Workspaces;\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n}\n\nexport var storage: Storage = new Storage();","/// <reference path=\"../typings/tsd.d.ts\" />\n\nexport class Trigger {\n\n  constructor() {\n    \n  }\n  \n  public newTab(): void  {\n    $(\".jsEventNewTab\")[0].click();\n  }\n\n  public widgetSettings(widgetInstanceId: number): void {\n    $(\".jsWidgetSettings[data-widget-instance-id=\" + widgetInstanceId + \"]\")[0].click();\n  }\n\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}