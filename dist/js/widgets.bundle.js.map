{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/classmodel/widget.ts","src/ts/helpers/html.ts","src/widgets/diagnostics_viewer/main.ts","src/widgets/log_reader/main.ts","src/widgets/new_widget/main.ts","src/widgets/topic_publisher/main.ts"],"names":[],"mappings":"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","file":"widgets.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { WidgetInterface } from '../interface/widget';\n\nexport class WidgetParent implements WidgetInterface {\n  public widgetInstanceId: number;\n  public selector: string;\n\n  constructor(widgetInstanceId: number) {\n    this.widgetInstanceId = widgetInstanceId;\n    this.setSelector();\n  }\n\n  public clbkCreated(): void {\n  }\n\n  public clbkResized(): void {\n  }\n\n  public clbkMoved(): void {\n  }\n\n  public clbkTab(): void {\n  }\n\n  public setSelector(): void {\n    this.selector = \".jsWidgetContainer[data-widget-instance-id=\" + this.widgetInstanceId + \"]\";\n  }\n}","///<reference path=\"../typings/tsd.d.ts\" />\n\nexport namespace Helper {\n  export class FormHelper {\n    public typeDefToHtmlForm (elem: any, name: string, formName: string, type: string, typeDefs: any, level: number = 0) {\n      let typeDef: any = this.getTypeDef(type, typeDefs);\n      let iname: string, itype: string;\n      let hType: any = $(\"<span style='color:#777;'>&nbsp;(\" + type + \")</span>\").prop('outerHTML');\n      if (typeDef == null) {\n        let input = this.generateInputField(formName, type);\n        $(elem).append($(\"<p style='padding-left:\" + (level * 20) + \"px'>\" + name + hType + input + \"</p>\"));\n      } else if (typeDef.fieldnames.length == 0) {\n        $(elem).append($(\"<p style='padding-left:\" + (level * 20) + \"px'>\" + name + hType + \"</p>\"));\n      } else {\n        $(elem).append($(\"<p style='padding-left:\" + (level * 20) + \"px'>\" + name + hType + \"</p>\"));\n        let i: any;\n        for (i in typeDef.fieldnames) {\n          iname = typeDef.fieldnames[i];\n          itype = typeDef.fieldtypes[i];\n          let prefix = formName != \"\" ? formName + \".\" : \"\";\n          this.typeDefToHtmlForm(elem, iname, prefix + iname, itype, typeDefs, level + 1);\n        }\n      }\n    }\n\n    private getTypeDef (type: string, typeDefs: any[], request: number = 1) {\n      let typeDef: any;\n      let i: any;\n      let filtered: any[] = typeDefs.filter((value: any, index: number, array: any[]) => { return type == value.type; });\n      if (filtered.length > 0) return filtered[0];\n      return null;\n    }\n    private generateInputField(name: string, type: string) {\n      let aInt: string[] = [\"int8\", \"uint8\", \"int16\", \"uint16\", \"int32\", \"uint32\", \"int64\", \"uint64\"];\n      let aFloat: string[] = [\"float32\", \"float64\"];\n      let aString: string[] = [\"string\"];\n      let aTime: string[] = [\"time\", \"duration\"];\n      let aBool: string[] = [\"bool\"];\n\n      if (aInt.indexOf(type) != -1) {\n        return $(\"<input type='number' name='\" + name + \"' value='' />\").prop('outerHTML');\n      }\n      else if (aFloat.indexOf(type) != -1) {\n        return $(\"<input type='number' name='\" + name + \"' value='' />\").prop('outerHTML');\n      }\n      else if (aString.indexOf(type) != -1) {\n        return $(\"<input type='text' name='\" + name + \"' value='' />\").prop('outerHTML');\n      }\n      else if (aTime.indexOf(type) != -1) {\n        return $(\"<input type='number' name='\" + name + \"' value='' />\").prop('outerHTML');\n      }\n      else if (aBool.indexOf(type) != -1) {\n        return $(\"<input type='checkbox' name='\" + name + \"' value='' />\").prop('outerHTML');\n      } else {\n        throw new Error(\"Unknown primitive type: \" + type);\n      }\n    };\n  }\n}","///<reference path=\"../../ts/typings/tsd.d.ts\" />\n/*\nimport { WidgetParent } from '../../ts/classmodel/widget'\n\ndeclare var ros: ROSLIB.Ros;\n\nclass WidgetNewWidget extends WidgetParent {\n  constructor(widgetInstanceId: number) {\n    super(widgetInstanceId);\n    this.topic = new ROSLIB.Topic({ ros: ros, name: \"\", messageType: \"\" });\n  }\n\n  // Properties\n  public topic: ROSLIB.Topic;\n\n  // Mandatory callbacks\n  clbkCreated(): void {\n  }\n  clbkResized(): void {\n  }\n  clbkMoved(): void {\n  }\n  clbkTab(): void {\n  }\n  clbkConfirm(): void {\n  }\n\n  // Subscription Callbacks\n  public on_topic_selected(selectedTopic: string): void {\n    this.topic.unsubscribe();\n    this.topic.name = selectedTopic;\n    var elem = $(this.selector).find(\".content\");\n    $(elem).html(\"\");\n\n    if (selectedTopic == \"\") return;\n\n    ros.getTopicType(selectedTopic, (type): void => {\n      this.topic.messageType = type;\n      $(this.selector).find(\"p.name\").html(selectedTopic);\n      $(this.selector).find(\"p.type\").html(type);\n      this.topic.subscribe(this.callback);\n    }, (e): void => {\n      throw new Error(e);\n    });\n  }\n\n  callback = (message: any): void => {\n    $(this.selector).find(\"div.content\").html(JSON.stringify(message, null, 4));\n  }\n}\n\nwindow[\"WidgetNewWidget\"] = WidgetNewWidget;\n*/","///<reference path=\"../../ts/typings/tsd.d.ts\" />\n/*\nimport { WidgetParent } from '../../ts/classmodel/widget'\n\ndeclare var ros: ROSLIB.Ros;\n\nclass WidgetNewWidget extends WidgetParent {\n  constructor(widgetInstanceId: number) {\n    super(widgetInstanceId);\n    this.topic = new ROSLIB.Topic({ ros: ros, name: \"\", messageType: \"\" });\n  }\n\n  // Properties\n  public topic: ROSLIB.Topic;\n\n  // Mandatory callbacks\n  clbkCreated(): void {\n  }\n  clbkResized(): void {\n  }\n  clbkMoved(): void {\n  }\n  clbkTab(): void {\n  }\n  clbkConfirm(): void {\n  }\n\n  // Subscription Callbacks\n  public on_topic_selected(selectedTopic: string): void {\n    this.topic.unsubscribe();\n    this.topic.name = selectedTopic;\n    var elem = $(this.selector).find(\".content\");\n    $(elem).html(\"\");\n\n    if (selectedTopic == \"\") return;\n\n    ros.getTopicType(selectedTopic, (type): void => {\n      this.topic.messageType = type;\n      $(this.selector).find(\"p.name\").html(selectedTopic);\n      $(this.selector).find(\"p.type\").html(type);\n      this.topic.subscribe(this.callback);\n    }, (e): void => {\n      throw new Error(e);\n    });\n  }\n\n  callback = (message: any): void => {\n    $(this.selector).find(\"div.content\").html(JSON.stringify(message, null, 4));\n  }\n}\n\nwindow[\"WidgetNewWidget\"] = WidgetNewWidget;\n*/","///<reference path=\"../../ts/typings/tsd.d.ts\" />\n\nimport { WidgetParent } from '../../ts/classmodel/widget'\n\ndeclare var ros: ROSLIB.Ros;\n\nclass WidgetNewWidget extends WidgetParent {\n  constructor(widgetInstanceId: number) {\n    super(widgetInstanceId);\n    this.topic = new ROSLIB.Topic({ ros: ros, name: \"\", messageType: \"\" });\n  }\n\n  // Properties\n  public topic: ROSLIB.Topic;\n\n  // Mandatory callbacks\n  clbkCreated(): void {\n  }\n  clbkResized(): void {\n  }\n  clbkMoved(): void {\n  }\n  clbkTab(): void {\n  }\n  clbkConfirm(): void {\n  }\n\n  // Subscription Callbacks\n  public on_topic_selected(selectedTopic: string): void {\n    this.topic.unsubscribe();\n    this.topic.name = selectedTopic;\n    var elem = $(this.selector).find(\".content\");\n    $(elem).html(\"\");\n\n    if (selectedTopic == \"\") return;\n\n    ros.getTopicType(selectedTopic, (type): void => {\n      this.topic.messageType = type;\n      $(this.selector).find(\"p.name\").html(selectedTopic);\n      $(this.selector).find(\"p.type\").html(type);\n      this.topic.subscribe(this.callback);\n    }, (e): void => {\n      throw new Error(e);\n    });\n  }\n\n  callback = (message: any): void => {\n    $(this.selector).find(\"div.content\").html(JSON.stringify(message, null, 4));\n  }\n}\n\nwindow[\"WidgetNewWidget\"] = WidgetNewWidget;\n","///<reference path=\"../../ts/typings/tsd.d.ts\" />\n\nimport { WidgetParent } from '../../ts/classmodel/widget'\nimport { Helper } from '../../ts/helpers/html';\n\ndeclare var ros: ROSLIB.Ros;\n\nclass WidgetTopicPublisher extends WidgetParent {\n  constructor(widgetInstanceId: number) {\n    super(widgetInstanceId);\n    this.topic = new ROSLIB.Topic({ ros: ros, name: \"\", messageType: \"\" });\n  }\n  // Mandatory callbacks\n  clbkCreated(): void {\n    $(document).delegate(this.selector + \" .jsWidgetTopicPublisherOnce\", 'click', (e) => {\n      $(this.selector).find(\".jsWidgetTopicPublisherOnce\").attr(\"disabled\", \"disabled\");\n      $(this.selector).find(\".jsWidgetTopicPublisherPublish\").attr(\"disabled\", \"disabled\");\n      $(this.selector).find(\".jsWidgetTopicPublisherStop\").attr(\"disabled\", \"disabled\");\n      this.publishOnce();\n      $(this.selector).find(\".jsWidgetTopicPublisherOnce\").removeAttr(\"disabled\");\n      $(this.selector).find(\".jsWidgetTopicPublisherPublish\").removeAttr(\"disabled\");\n      $(this.selector).find(\".jsWidgetTopicPublisherStop\").removeAttr(\"disabled\");\n    });\n    $(document).delegate(this.selector + \" .jsWidgetTopicPublisherPublish\", 'click', (e) => {\n      $(this.selector).find(\".jsWidgetTopicPublisherOnce\").attr(\"disabled\", \"disabled\");\n      $(this.selector).find(\".jsWidgetTopicPublisherPublish\").attr(\"disabled\", \"disabled\");\n      $(this.selector).find(\".jsWidgetTopicPublisherStop\").removeAttr(\"disabled\");\n      this.publish();\n    });\n    $(document).delegate(this.selector + \" .jsWidgetTopicPublisherStop\", 'click', (e) => {\n      $(this.selector).find(\".jsWidgetTopicPublisherOnce\").removeAttr(\"disabled\");\n      $(this.selector).find(\".jsWidgetTopicPublisherPublish\").removeAttr(\"disabled\");\n      $(this.selector).find(\".jsWidgetTopicPublisherStop\").removeAttr(\"disabled\");\n      this.stop();\n    });\n  }\n  clbkResized(): void {\n  }\n  clbkMoved(): void {\n  }\n  clbkTab(): void {\n  }\n  clbkConfirm(): void {\n    ros.getMessageDetails(this.topicType, (typeDefs) => {\n      var elem = $(this.selector + \" .form form\").html(\"\");\n      let htmlHelper = new Helper.FormHelper();\n      $(this.selector).find(\"p.name\").html(this.topicName);\n      $(this.selector).find(\"p.type\").html(this.topicType);\n      htmlHelper.typeDefToHtmlForm(elem, \"Object\", \"formObject\", this.topicType, typeDefs, 0);\n    }, (error: any) => {\n      alert(\"Topic type not found, please try again\");\n      console.log(error);\n    });\n  }\n\n  // button callbacks\n  publishOnce(): void {\n    let obj: any = this.getObjectForm(this.selector + \" .form form\");\n    let name: string = this.topicName;\n    let messageType: string = this.topicType;\n    let publisher = new ROSLIB.Topic({\n      ros: ros,\n      name: name,\n      messageType: messageType\n    });\n    publisher.publish(obj);\n  }\n\n  public interval: any;\n  publish(): void {\n    let name: string = this.topicName;\n    let messageType: string = this.topicType;\n    let publisher = new ROSLIB.Topic({\n      ros: ros,\n      name: name,\n      messageType: messageType\n    });\n    this.interval = window.setInterval(() => { publisher.publish(this.getObjectForm(this.selector + \" .form form\")); }, 1000);\n  }\n\n  stop(): void {\n    window.clearInterval(this.interval);\n  }\n\n  // helper methods\n  getObjectForm(selector: string): any {\n    var input, name, type;\n    var tree;\n    var formObject: any = {};\n    var inputs = $(selector).find(\"input[type=text], input[type=checkbox], input[type=number]\");\n    for (var i = 0; i < inputs.length; i++) {\n      input = inputs[i];\n      name = $(input).attr(\"name\");\n      type = $(input).attr(\"type\");\n      var nameSplit = name.split('.');\n      for (let j: number = 0; j < nameSplit.length; j++) {\n        let slice = nameSplit.slice(0, (j + 1));\n        let prop: string = slice.join(\".\");\n        eval(\"if(\" + prop + \" == undefined) \" + prop + \" = {}\");\n      }\n      switch (type) {\n        case 'text':\n          eval(name + \" = '\" + $(input).val() + \"'\");\n          break;\n        case 'number':\n          eval(name + \" = \" + parseFloat($(input).val()));\n          break;\n        case 'checkbox':\n          eval(name + \" = \" + $(input).is(\":checked\")) ? 1 : 0;\n          break;\n      }\n    }\n    return formObject;\n  };\n\n  // ===== widget params =====\n  public topicName: string;\n  public topicType: string;\n  public topic: ROSLIB.Topic;\n}\n\nwindow[\"WidgetTopicPublisher\"] = WidgetTopicPublisher;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}